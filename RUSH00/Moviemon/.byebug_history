continue
selected["movies"]
continue
selected.empty?
selected
continue
$view['moviedex']
$selected.in_use
continue
$player.moviedex_in_use
continue
$player.moviedex_in_use
continue
$game.index_page
game.index_page
$player.moviedex_in_use
continue
$selected.action
continue
$player
$game
continue
selected["strength"].class
selected["strength"]
continue
selected["1"]
selected["0"]
selected = JSON.parse(file)
selected["strength"]
continue
f = open("save.json", "w")
Dir.pwd
continue
$selected.in_use
$selected.active
$selected
continue
$selected.in_use
continue
$game.lost
continue
$player.moviedex
continue
$player.moviedex
$player.moviedex.size
continue
$player.moviedex.size
$player.moviedex.ave
$player.moviedex.size
$player.moviedex
continue
$player.moviedex
continue
$player.moviedex
$player
continue
$player
continue
$player.avg_strength.round
$player.avg_strength.round!
$player.avg_strength.round
$player.avg_strength
continue
$game.movies.each { |elem| puts elem.infos[:rating].to_f/20 }
$game.movies.each { |elem| elem.infos[:rating].to_f/20 }
$game.movies.each { |elem| return elem.infos[:rating].to_f/20 }
$player.avg_strength
$player.avg_strenght
continue
$player.avg_strenght
$player.avg_strength
$layer.avg_strength
$game
$game.avg_strength
continue
contnue
$game.avg_strength
$game
continue
$game.fight
continue
$game.fight
continue
$player.life
strength_m =  $game.current_movie.infos[:rating].to_i * 10
$game.current_movie.infos[:rating].to_i * 10
$game.current_movie.infos[:rating].to_i
$game.current_movie.infos[:rating]
$game.current_movie[:rating]
$game.current_movie
continue
$game.current_movie
$game.current_movie[:rating]
strength = $player.moviedex.length
$player.moviedex.length
$player.moviedex.lenghth
$player.moviedex
$game.moviedex
$game.movidex.length
continue
@movie
continue
$game.fight
continue
contibue
continue
$game
continue
player
continue
params
player
